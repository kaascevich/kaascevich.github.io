---
export interface Props {
  id: string
  text: string
  depth: 1 | 2
  h1Index: number
}
const { id, text, depth, h1Index } = Astro.props
---

<a href={`#${id}`} class={`depth-${depth}`}>
  <div class='marker'>
    {depth === 1 ? h1Index : <div class='dot' />}
  </div>
  <div class='title'>
    {text.replace(/#$/g, '')}
  </div>
</a>

<style lang='scss'>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  a {
    display: block flex;
    position: relative;

    gap: spacing(2);

    border-radius: var(--radius-xl);

    padding-block: spacing(2);
    padding-inline: spacing(2);

    min-block-size: spacing(9);
    inline-size: 100%;

    &:hover {
      background-color: var(--color-toc-btn-hover);
    }

    &:active {
      background-color: var(--color-toc-btn-active);
    }

    .marker {
      @include font-size($text-xs);

      display: block flex;

      flex-shrink: 0;

      align-items: center;
      justify-content: center;

      border-radius: var(--radius-lg);

      block-size: spacing(5);
      inline-size: spacing(5);

      font-weight: var(--fw-bold);
    }

    .title {
      @include font-size($text-sm);
      color: var(--color-toc-item-text);
    }

    &.depth-1 {
      .marker {
        background-color: var(--color-toc-badge-bg);

        color: var(--color-btn-content);
      }
    }

    &.depth-2 {
      .marker {
        margin-inline-start: spacing(4);

        .dot {
          border-radius: spacing(0.75);

          background-color: var(--color-toc-badge-bg);

          block-size: spacing(2);
          inline-size: spacing(2);
        }
      }
    }
  }
</style>

---
import { Icon } from "astro-icon/components"
import DisplaySettings from "$/components/global/nav/DisplaySettings.svelte"
import { navbarConfig, siteConfig } from "$/config"
import NavMenuPanel from "$/components/global/nav/NavMenuPanel.astro"
import Search from "$/components/global/nav/Search.svelte"
import LightDarkSwitch from "$/components/global/nav/LightDarkSwitch.svelte"
import { url } from "$/utils/urls"

type Props = {
  class?: string | undefined
}
const { class: className } = Astro.props
---

<div id="navbar" class="z-50 onload-animation">
  <!-- used for onload animation -->
  <div class="absolute h-8 left-0 right-0 -top-8 bg-[--card-bg] transition">
  </div>

  <nav
    class:list={[
      className,
      "card-base !overflow-visible max-w-[--page-width] h-[4.5rem] !rounded-t-none mx-auto flex items-center justify-between px-4",
    ]}
  >
    <a
      href={url("/")}
      class="btn-plain scale-animation rounded-lg h-[3.25rem] px-5 font-bold active:scale-95"
    >
      <div class="flex flex-row text-[--primary] items-center text-md">
        <Icon name="tabler:home" size="1.75rem" class="mr-2" />
        {siteConfig.title}
      </div>
    </a>
    <menu class="hidden md:flex">
      {
        navbarConfig.links.map((link) => (
          <a
            aria-label={link.name}
            href={link.external === true ? link.url : url(link.url)}
            target={link.external === true ? "_blank" : null}
            class="btn-plain scale-animation rounded-lg h-11 font-bold px-5 active:scale-95"
          >
            <div class="flex items-center">
              {link.name}
              {link.external === true && (
                <Icon
                  name="tabler:external-link"
                  size="1.125rem"
                  class="transition ml-1 text-black/[0.2] dark:text-white/[0.2]"
                />
              )}
            </div>
          </a>
        ))
      }
    </menu>
    <div class="flex">
      <Search client:load />

      <button
        aria-label="Display Settings"
        class="btn-plain scale-animation rounded-lg h-11 w-11 active:scale-90"
        id="display-settings-switch"
      >
        <Icon name="tabler:palette" size="1.25rem" />
      </button>

      <LightDarkSwitch client:load />

      <button
        aria-label="Menu"
        name="Nav Menu"
        class="btn-plain scale-animation rounded-lg w-11 h-11 active:scale-90 md:!hidden"
        id="nav-menu-switch"
      >
        <Icon name="tabler:menu-2" size="1.25rem" />
      </button>
    </div>

    <NavMenuPanel links={navbarConfig.links} />
    <DisplaySettings client:only="svelte" />
  </nav>
</div>

<script>
  function toggleColorScheme() {
    if (localStorage.getItem("colorScheme") === "dark") {
      document.documentElement.classList.remove("dark")
      localStorage.setItem("colorScheme", "light")
    } else {
      document.documentElement.classList.add("dark")
      localStorage.setItem("colorScheme", "dark")
    }
  }

  function loadButtonScript() {
    document
      .getElementById("scheme-switch")
      ?.addEventListener("click", toggleColorScheme)

    document
      .getElementById("display-settings-switch")
      ?.addEventListener("click", () =>
        document
          .getElementById("display-settings")
          ?.classList.toggle("float-panel-closed"),
      )

    document
      .getElementById("nav-menu-switch")
      ?.addEventListener("click", () =>
        document
          .getElementById("nav-menu-panel")
          ?.classList.toggle("float-panel-closed"),
      )
  }

  loadButtonScript()
</script>

<script is:inline define:vars={{ scriptUrl: url("/pagefind/pagefind.js") }}>
  async function loadPagefind() {
    /** @type {import("vite-plugin-pagefind/types").Pagefind} */
    const pagefind = await import(scriptUrl)
    await pagefind.options({ excerptLength: 20 })
    pagefind.init()
    window.pagefind = pagefind
    pagefind.search("") // speed up the first search
  }
  loadPagefind()
</script>

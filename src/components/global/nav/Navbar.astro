---
import { Icon } from 'astro-icon/components'
import siteConfig from '$/config/site'
import NavExtras from '$/components/global/nav/NavExtras.astro'
import NavLink from '$/components/global/nav/NavLink.astro'

interface Props {
  class?: string
}
const { class: className } = Astro.props
---

<div id='navbar'>
  <nav class={className}>
    <a href='/' class='home-link'>
      <Icon name='tabler:home' />
      {siteConfig.title}
    </a>
    <menu>
      {siteConfig.navbar.links.map((link) => <NavLink {link} />)}
    </menu>

    <NavExtras />
  </nav>
</div>

<script>
  import {
    NAVBAR_HEIGHT,
    BANNER_HEIGHT,
    BANNER_HEIGHT_HOME,
    MAIN_PANEL_EXCESS_HEIGHT,
  } from '$/constants/constants'

  window.addEventListener('scroll', () => {
    if (document.getElementById('banner-wrapper') === null) {
      return
    }

    const navbar = document.getElementById('navbar-wrapper')!

    const bannerHeight =
      document.body.classList.contains('is-home') && window.innerWidth >= 1024
        ? BANNER_HEIGHT_HOME
        : BANNER_HEIGHT

    const threshold =
      window.innerHeight * (bannerHeight / 100) -
      NAVBAR_HEIGHT -
      MAIN_PANEL_EXCESS_HEIGHT -
      16

    if (
      document.body.scrollTop >= threshold ||
      document.documentElement.scrollTop >= threshold
    ) {
      navbar.classList.add('navbar-hidden')
    } else {
      navbar.classList.remove('navbar-hidden')
    }
  })
</script>

<style lang='scss'>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  @keyframes fade-in-down {
    from {
      translate: 0 spacing(-16);

      opacity: 0%;
    }

    to {
      translate: 0 0;

      opacity: 100%;
    }
  }

  #navbar {
    opacity: 0%;
    z-index: 50;

    animation-name: fade-in-down;
    animation-duration: 300ms;
    animation-delay: 0ms;
    animation-fill-mode: forwards;

    nav {
      @extend %card-base;

      display: block flex;

      align-items: center;
      justify-content: space-between;

      margin-inline: auto;

      border-start-start-radius: 0 !important;
      border-start-end-radius: 0 !important;

      padding-inline: spacing(4);

      block-size: spacing(18);
      max-inline-size: var(--page-width);

      overflow: visible !important;

      .home-link {
        @extend %btn-plain, %expand-animation;
        display: block flex;

        flex-direction: row;

        gap: spacing(2);

        align-items: center;

        border-radius: $radius-lg;

        padding-inline: spacing(5);

        block-size: spacing(13);

        color: var(--primary) !important;

        font-weight: $font-weight-bold;

        &:active {
          scale: 95%;
        }

        svg {
          block-size: spacing(7);
          inline-size: spacing(7);
        }
      }

      menu {
        display: none;

        @include md {
          display: block flex;
        }
      }
    }
  }
</style>

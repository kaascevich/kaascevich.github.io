---
import type { NavBarLink } from '$/types/config'
import { Icon } from 'astro-icon/components'
import strings from '$/config/strings'

interface Props {
  links: readonly NavBarLink[]
}

const { links } = Astro.props
---

<button aria-label={strings.alts.navMenuButton} id="nav-menu-switch">
  <Icon name="tabler:menu-2" />
</button>

<nav id="nav-menu-panel" class="float-panel-closed">
  {
    links.map(({ name, url, external = false }) => (
      <a
        href={url}
        target={external ? '_blank' : null}
      >
        <header>{name}</header>
        <Icon
          name={`tabler:${external ? 'external-link' : 'chevron-right'}`}
          class={`link-icon-${external ? 'external' : 'internal'}`}
        />
      </a>
    ))
  }
</nav>

<script>
  document
    .getElementById('nav-menu-switch')
    ?.addEventListener('click', () =>
      document
        .getElementById('nav-menu-panel')
        ?.classList.toggle('float-panel-closed'),
    )
</script>

<style lang="scss">
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  #nav-menu-switch {
    @extend %btn-plain, %expand-animation;
    block-size: spacing(11);
    inline-size: spacing(11);

    border-radius: $radius-lg;

    &:active {
      scale: 90%;
    }

    @include variants.md {
      display: none !important;
    }


    svg {
      block-size: spacing(5);
      inline-size: spacing(5);
    }
  }

  #nav-menu-panel {
    @extend %float-panel;
    @include transition($properties: all);

    position: fixed;
    inset-inline-end: spacing(4);

    padding: spacing(2);

    a {
      @include transition;

      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: spacing(2) spacing(1) spacing(2) spacing(3);

      border-radius: $radius-lg;
      gap: spacing(8);

      &:hover {
        background-color: var(--btn-plain-bg-hover);
      }

      &:active {
        background-color: var(--btn-plain-bg-active);
      }

      header {
        @include transition;
        @include text-plain(75%);

        font-weight: $font-weight-bold;
      }

      &:is(:hover, :active) header {
        color: var(--primary);
      }

      %link-icon {
        @include transition;

        block-size: spacing(5);

        inline-size: spacing(5);
      }

      .link-icon-external {
        @extend %link-icon;
        @include text-plain(25%);
      }

      .link-icon-internal {
        @extend %link-icon;

        color: var(--primary);
      }
    }
  }
</style>

---
import type { NavBarLink } from '$/types/config'
import { Icon } from 'astro-icon/components'
import strings from '$/config/strings'

export interface Props {
  links: readonly NavBarLink[]
}

const { links } = Astro.props
---

<button aria-label={strings.alts.navMenuButton} id="nav-menu-switch">
  <Icon name="tabler:menu-2" />
</button>

<nav id="nav-menu-panel" class="float-panel-closed">
  {
    links.map(({ name, url, external = false }) => (
      <a href={url} target={external ? '_blank' : null}>
        <header>{name}</header>
        <Icon
          name={`tabler:${external ? 'external-link' : 'chevron-right'}`}
          class={`link-icon-${external ? 'external' : 'internal'}`}
        />
      </a>
    ))
  }
</nav>

<script>
  document
    .getElementById('nav-menu-switch')
    ?.addEventListener('click', () =>
      document
        .getElementById('nav-menu-panel')
        ?.classList.toggle('float-panel-closed'),
    )
</script>

<style lang="scss">
  @use '$/styles/classes';
  @use '$/styles/theme' as *;
  @use '$/styles/variants' as *;

  #nav-menu-switch {
    @extend %btn-plain, %expand-animation;

    border-radius: var(--radius-lg);

    block-size: spacing(11);
    inline-size: spacing(11);

    &:active {
      scale: 90%;
    }

    [data-icon] {
      block-size: spacing(5);
      inline-size: spacing(5);
    }

    @media (width >= $breakpoint-md) {
      display: none;
    }
  }

  #nav-menu-panel {
    @extend %float-panel;

    position: fixed;
    inset-inline-end: spacing(4);

    transition-duration: var(--transition-duration);
    transition-property: all;
    transition-timing-function: var(--transition-function);

    padding-block: spacing(2);
    padding-inline: spacing(2);

    a {
      display: block flex;

      gap: spacing(8);

      align-items: center;
      justify-content: space-between;

      border-radius: var(--radius-lg);

      padding-block: spacing(2);
      padding-inline: spacing(3) spacing(1);

      &:hover {
        background-color: var(--color-btn-plain-bg-hover);
      }

      &:active {
        background-color: var(--color-btn-plain-bg-active);
      }

      &:is(:hover, :active) header {
        color: var(--color-primary);
      }

      header {
        color: var(--color-nav-panel-text);

        font-weight: var(--fw-bold);
      }

      %link-icon {
        block-size: spacing(5);
        inline-size: spacing(5);
      }

      .link-icon-external {
        @extend %link-icon;
        color: var(--color-nav-link-external-icon);
      }

      .link-icon-internal {
        @extend %link-icon;

        color: var(--color-primary);
      }
    }

    @media (width >= $breakpoint-md) {
      display: none;
    }
  }
</style>

---
import { Icon } from 'astro-icon/components'
import { capitalize } from 'remeda'

type CalloutType = 'tip' | 'note' | 'important' | 'warning' | 'caution'

interface Props {
  /** The title for this callout. Defaults to the callout type. */
  title?: string
  /** The callout type. */
  type: CalloutType
}
const { title, type } = Astro.props

const calloutIcons: Record<CalloutType, string> = {
  tip: 'tabler:bulb',
  note: 'tabler:info-circle',
  important: 'tabler:message-2-exclamation',
  warning: 'tabler:alert-triangle',
  caution: 'tabler:alert-octagon',
}
---

<blockquote class={`bdm-${type}`}>
  <header>
    <Icon name={calloutIcons[type]} />
    {title ?? capitalize(type)}
  </header>
  <slot />
</blockquote>

<style lang="scss">
  @use 'sass:math';
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  blockquote {
    @each $type in ('tip', 'note', 'important', 'warning', 'caution') {
      $color: var(--admonitions-color-#{$type});

      &.bdm-#{$type} {
        header {
          color: $color;
        }

        // left border
        &::before {
          content: '';

          background-color: $color;
        }
      }
    }

    header {
      display: flex;
      align-items: center;
      margin-bottom: spacing(-3);

      font-weight: $font-weight-bold;

      svg {
        display: inline-block;
        translate: 0 spacing(math.div(1, 8));

        width: spacing(5);
        height: spacing(5);
        margin-right: spacing(1.5);
        overflow: visible;

        font-size: inherit;
      }
    }
  }
</style>

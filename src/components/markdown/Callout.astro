---
import strings from '$/config/strings'
import type { CalloutType } from '$/types/content'

import { Icon } from 'astro-icon/components'

export interface Props {
  /** The title for this callout. Defaults to the callout type. */
  title?: string
  /** The callout type. */
  type: CalloutType
}
const { title, type } = Astro.props

const calloutIcons: Record<CalloutType, string> = {
  tip: 'tabler:bulb',
  note: 'tabler:info-circle',
  important: 'tabler:message-2-exclamation',
  warning: 'tabler:alert-triangle',
  caution: 'tabler:alert-octagon',
}
---

<blockquote class={`bdm-${type}`}>
  <header>
    <Icon name={calloutIcons[type]} />
    {title ?? strings.content.callouts[type]}
  </header>
  <slot />
</blockquote>

<style lang="scss">
  @use '$/styles/classes';
  @use '$/styles/theme' as *;

  blockquote {
    // remove the double quotes
    :global(p) {
      &::before,
      &::after {
        content: none;
      }
    }

    @each $type in ('tip', 'note', 'important', 'warning', 'caution') {
      $color: var(--color-callout-#{$type});

      &.bdm-#{$type} {
        // left border
        &::before {
          background-color: $color;

          content: '';
        }

        header {
          color: $color;
        }
      }
    }

    header {
      display: block flex;

      align-items: center;

      margin-block-end: spacing(-3);

      font-weight: var(--fw-bold);

      [data-icon] {
        display: inline flow-root;

        margin-inline-end: spacing(1.5);

        block-size: spacing(5);
        inline-size: spacing(5);

        overflow: visible;

        font-size: inherit;
      }
    }
  }
</style>

---
import type { Post } from '$/types/content'
import path from 'node:path'
import { getDir } from '$/utils/urls'
import PostTitle from './PostTitle.astro'
import PostMeta from '../meta/PostMeta.astro'
import PostExtraMeta from '../meta/PostExtraMeta.astro'
import ImageWrapper from '$/components/misc/ImageWrapper.astro'

export interface Props {
  entry: Post
  wordCount: number
  readingTime: number
}
const { entry, wordCount, readingTime } = Astro.props
---

<PostExtraMeta {wordCount} {readingTime} class="extra-meta" />

<!-- title -->
<PostTitle {entry} />

<!-- metadata -->
<div class="meta-wrapper">
  <PostMeta {entry} class="meta-items" />
  {entry.data.image === undefined && <hr />}
</div>

{
  entry.data.image !== undefined && (
    <ImageWrapper
      id="post-cover"
      src={entry.data.image.source}
      alt={entry.data.image.alt}
      basePath={path.join('content/posts/', getDir(`${entry.id}/`))}
    />
  )
}

<style lang="scss">
  @use '$/styles/classes';
  @use '$/styles/theme' as *;
  @use '$/styles/transition';
  @use '$/styles/variants' as *;

  :global(.extra-meta) {
    @extend %onload-animation;

    margin-block-end: spacing(3);
  }

  .meta-wrapper {
    @extend %onload-animation;

    :global(.meta-items) {
      margin-block-end: spacing(5);
    }

    hr {
      margin-block-end: spacing(5);

      border: 1px dashed var(--color-line-divider);
    }
  }

  :global(#post-cover) {
    @extend %onload-animation;

    margin-block-end: spacing(8);

    border-radius: var(--radius-xl);
  }
</style>

---
import PostMeta from "$/components/post/PostMeta.astro"
import PostLink from "$/components/post/PostLink.astro"
import { Icon } from "astro-icon/components"
import strings from "$/config/strings"
import { render, type CollectionEntry } from "astro:content"

type Props = Readonly<{
  class?: string | undefined
  entry: CollectionEntry<"posts">
  url: string
  style: string
}>

const { class: className, entry, url, style } = Astro.props

const { title, published, updated, tags, category, image, description } =
  entry.data

const coverWidth = image === undefined ? "3.25rem" : "28%"

const { remarkPluginFrontmatter } = await render(entry)
---

<article class={className} {style}>
  <div class="info-wrapper">
    <h2>
      <a href={url}>
        {title}
        <Icon size="2rem" name="tabler:chevron-right" />
      </a>
    </h2>

    <PostMeta {published} {updated} {tags} {category} class="mb-4" />

    <div class="description">
      {description}
    </div>

    <!-- word count and read time  -->
    <footer>
      <div>{strings.meta.words(remarkPluginFrontmatter.words)}</div>
      |
      <div>{strings.meta.minutes(remarkPluginFrontmatter.minutes)}</div>
    </footer>
  </div>

  <PostLink {entry} {url} />
</article>

<style lang="scss" define:vars={{ coverWidth }}>
  @use "$/styles/main";
  @use "$/styles/theme" as *;
  @use "$/styles/utils" as *;
  @use "$/styles/variants";

  article {
    @extend .card-base;
    display: flex;
    flex-direction: column-reverse;
    width: 100%;
    border-radius: $radius-xl2;
    overflow: hidden;
    position: relative;
    @include variants.md {
      flex-direction: column;
    }

    // post separator
    @include after {
      @include transition();
      @apply border-t border-dashed mx-6 border-black/10 dark:border-white/[0.15] first:border-t-0 md:hidden;
    }

    .info-wrapper {
      padding: spacing(6);

      @include variants.md {
        padding: {
          left: spacing(9);
          right: spacing(2);
          top: spacing(7);
        }
        width: calc(100% - var(--coverWidth) - 12px);
      }

      h2 a {
        @include transition();
        width: 100%;
        display: block;
        font-weight: $font-weight-bold;
        margin-bottom: spacing(3);
        @include font-size($text-xl3);
        @include text-plain(90%);

        &:hover {
          color: var(--primary);
        }
        &:active {
          color: var(--title-active);
        }

        @include variants.dark {
          &:hover {
            color: var(--primary);
          }
          &:active {
            color: var(--title-active);
          }
        }

        @apply before:w-1 before:h-5 before:rounded-md before:bg-[--primary] before:absolute before:top-[36px] before:left-[18px] before:hidden md:before:block;

        svg {
          display: inline;
          color: var(--primary);
          translate: 0 spacing(0.5);
          position: absolute;

          @include variants.md {
            @include transition();
            position: absolute;
            translate: spacing(-1) spacing(0.5);
            opacity: 0%;
          }
        }

        @include variants.md {
          &:hover svg {
            opacity: 100%;
            translate: 0;
          }
        }
      }

      .description {
        @include transition();
        @include text-plain(75%);
        margin-bottom: spacing(3.5);
        padding-right: spacing(4);
      }
    }

    footer {
      @include transition();
      @include font-size($text-sm);
      display: flex;
      gap: spacing(4);
      @include text-plain(30%);
    }
  }
</style>

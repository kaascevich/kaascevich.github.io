---
import PostMeta from '$/components/post/meta/PostMeta.astro'
import PostLink from '$/components/post/PostLink.astro'
import { Icon } from 'astro-icon/components'
import { render, type CollectionEntry } from 'astro:content'
import PostExtraMeta from '$/components/post/meta/PostExtraMeta.astro'

interface Props {
  class?: string | undefined
  entry: CollectionEntry<'posts'>
  url: string
  style: string
}

const { class: className, entry, url, style } = Astro.props

const { title, published, updated, tags, category, image, description } =
  entry.data

const coverWidth = image === undefined ? '3.25rem' : '28%'

const { remarkPluginFrontmatter } = await render(entry)
---

<article class={className} {style}>
  <div class="info-wrapper">
    <h2>
      <a href={url}>
        {title}
        <Icon size="2rem" name="tabler:chevron-right" />
      </a>
    </h2>

    <PostMeta
      {published}
      {updated}
      {tags}
      {category}
      compactOnMobile={true}
      class="mb-4"
    />

    <div class="description">
      {description}
    </div>

    <footer>
      <PostExtraMeta
        wordCount={remarkPluginFrontmatter.words}
        readingTime={remarkPluginFrontmatter.minutes}
      />
    </footer>
  </div>

  <PostLink {entry} {url} />
</article>

<style lang="scss" define:vars={{ coverWidth }}>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  article {
    @extend .card-base;
    display: flex;
    position: relative;
    flex-direction: column-reverse;
    border-radius: $radius-xl2;
    width: 100%;
    overflow: hidden;
    @include variants.md {
      flex-direction: column;
    }

    // post separator
    &:not(:first-child)::after {
      content: '';

      @include transition();
      @include margin-x(spacing(6));
      border: {
        top-width: 1px;
        style: dashed;
        color: black(10%);
      }

      @include variants.dark {
        border-color: white(15%);
      }

      @include variants.md {
        display: none;
      }
    }

    .info-wrapper {
      padding: spacing(6);

      @include variants.md {
        width: calc(100% - var(--coverWidth) - 12px);
        padding: {
          top: spacing(7);
          right: spacing(2);
          left: spacing(9);
        }
      }

      h2 a {
        @include transition();
        display: block;
        margin-bottom: spacing(3);
        width: 100%;
        font-weight: $font-weight-bold;
        @include font-size($text-xl3);
        @include text-plain(90%);

        &:hover {
          color: var(--primary);
        }
        &:active {
          color: var(--title-active);
        }

        @include variants.dark {
          &:hover {
            color: var(--primary);
          }
          &:active {
            color: var(--title-active);
          }
        }

        &::before {
          content: '';
          width: spacing(1);
          height: spacing(5);
          border-radius: $radius-md;
          background-color: var(--primary);
          position: absolute;
          top: spacing(9);
          left: spacing(4.5);

          display: none;
          @include variants.md {
            display: block;
          }
        }

        svg {
          display: inline;
          position: absolute;
          translate: 0;
          color: var(--primary);

          @include variants.md {
            @include transition();
            position: absolute;
            translate: spacing(-1);
            opacity: 0%;
          }
        }

        @include variants.md {
          &:hover svg {
            translate: 0;
            opacity: 100%;
          }
        }
      }

      .description {
        @include transition();
        @include text-plain(75%);
        margin-bottom: spacing(3.5);
        padding-right: spacing(4);
      }
    }

    footer {
      @include transition();
    }
  }
</style>

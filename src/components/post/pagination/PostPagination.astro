---
import type { Post } from '$/types/content'

import { getSortedPosts } from '$/utils/content'
import PaginationLink from './PaginationLink.astro'

export interface Props {
  entry: Post
}

const { entry } = Astro.props

const allPosts = await getSortedPosts()
const index = allPosts.findIndex((other) => other.id === entry.id)
const prevEntry = allPosts[index - 1]
const nextEntry = allPosts[index + 1]
---

<nav>
  {
    nextEntry !== undefined ? (
      <PaginationLink entry={nextEntry} type="next" />
    ) : (
      <div class="spacer" />
    )
  }
  {
    prevEntry !== undefined ? (
      <PaginationLink entry={prevEntry} type="prev" />
    ) : (
      <div class="spacer" />
    )
  }
</nav>

<style lang="scss">
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  nav {
    display: block flex;

    flex-direction: column;

    gap: spacing(4);

    justify-content: space-between;

    margin-block-end: spacing(4);

    inline-size: 100%;

    overflow: hidden;

    .spacer {
      visibility: hidden;
    }

    @include md {
      flex-direction: row;
    }
  }
</style>

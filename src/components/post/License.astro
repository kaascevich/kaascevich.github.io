---
import { formatDate } from '$/utils/dates'
import { Icon } from 'astro-icon/components'
import siteConfig from '$/config/site'
import strings from '$/config/strings'
import type { LicenseConfig } from '$/types/config'

export interface Props {
  config: LicenseConfig
  title: string
  pubDate: Date
  class: string
}

const { config, title, pubDate, class: className } = Astro.props
const postUrl = decodeURIComponent(Astro.url.toString())
---

<div class:list={['license', className]}>
  <hgroup>
    <header>{title}</header>
    <a href={postUrl}>{postUrl}</a>
  </hgroup>
  <div class='details'>
    <div>
      <header>
        {strings.license.author}
      </header>
      <div class='details-text'>
        {siteConfig.profile.name}
      </div>
    </div>
    <div>
      <header>
        {strings.license.publishedAt}
      </header>
      <div class='details-text'>
        {formatDate(pubDate)}
      </div>
    </div>
    <div>
      <header>
        {strings.license.license}
      </header>
      <a href={config.url} target='_blank' class='details-link' rel='license'>
        {config.name}
      </a>
    </div>
  </div>
  <Icon name='tabler:creative-commons' class='cc-icon' />
</div>

<style lang='scss'>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  .license {
    position: relative;

    background-color: var(--license-block-bg);

    padding-block: spacing(5);
    padding-inline: spacing(6);

    overflow: hidden;

    hgroup {
      header {
        color: bw(75%);

        font-weight: $font-weight-bold;
      }

      a {
        @extend %link;

        color: var(--primary);
      }
    }

    .details {
      display: block flex;

      flex-direction: column;

      gap: spacing(3);

      margin-block-start: spacing(2);

      header {
        @include font-size($text-sm);
        color: bw(30%);
      }

      .details-text {
        white-space: nowrap;
        color: bw(75%);
      }

      .details-link {
        @extend %link;
        white-space: nowrap;
        color: var(--primary);
      }

      @include sm {
        flex-direction: row;

        gap: spacing(6);
      }
    }

    .cc-icon {
      @include transition($properties: $transition-colors);

      position: absolute;
      inset-block-end: 50%;
      inset-inline-end: 50%;

      translate: 50% 50%;

      block-size: spacing(60);
      inline-size: spacing(60);

      color: bw(5%);

      pointer-events: none;

      @include sm {
        inset-inline-end: spacing(6);

        translate: 0 50%;
      }
    }
  }
</style>

---
import type { Post } from '$/types/content'
import path from 'node:path'
import { getDir } from '$/utils/urls'
import PostMeta from '$/components/post/meta/PostMeta.astro'
import PostExtraMeta from '$/components/post/meta/PostExtraMeta.astro'
import ImageWrapper from '$/components/misc/ImageWrapper.astro'

interface Props {
  entry: Post
  wordCount: number
  readingTime: number
}
const { entry, wordCount, readingTime } = Astro.props
---

<PostExtraMeta {wordCount} {readingTime} class="extra-meta" />

<!-- title -->
<h1>
  <div
    data-pagefind-body
    data-pagefind-weight="10"
    data-pagefind-meta="title"
    class="title-wrapper"
  >
    {entry.data.title}
  </div>
</h1>

<!-- metadata -->
<div class="meta-wrapper">
  <PostMeta {entry} class="meta-items" />
  {entry.data.image === undefined && <hr />}
</div>

{
  entry.data.image !== undefined && (
    <ImageWrapper
      id="post-cover"
      src={entry.data.image.source}
      alt={entry.data.image.alt}
      basePath={path.join('content/posts/', getDir(`${entry.id}/`))}
    />
  )
}

<style lang="scss">
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/transition';
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  :global(.extra-meta) {
    @extend %onload-animation;
    @include transition;

    margin-block-end: spacing(3);
  }

  h1 {
    @extend %onload-animation;

    position: relative;

    .title-wrapper {
      @include text-plain(90%);
      @include transition;

      display: block;
      inline-size: 100%;
      margin-block-end: spacing(3);

      font-weight: $font-weight-bold;

      @include font-size($text-xl3);

      @include variants.md {
        font-size: 2.25rem;
        line-block-size: 2.75rem;
      }

      @include variants.md {
        &::before {
          content: '';

          position: absolute;
          block-size: spacing(5);

          inline-size: spacing(1);

          border-radius: $radius-md;

          background-color: var(--primary);
          inset-block-start: spacing(3);
          inset-inline-start: spacing(-4.5);
        }
      }
    }
  }

  .meta-wrapper {
    @extend %onload-animation;

    :global(.meta-items) {
      margin-block-end: spacing(5);
    }

    hr {
      margin-block-end: spacing(5);

      border: 1px dashed var(--line-divider);
    }
  }

  :global(#post-cover) {
    @extend %onload-animation;

    margin-block-end: spacing(8);

    border-radius: $radius-xl;
  }
</style>

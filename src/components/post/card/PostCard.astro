---
import type { Post } from '$/types/content'

import PostMeta from '../meta/PostMeta.astro'
import PostLink from './PostLink.astro'
import { Icon } from 'astro-icon/components'
import { render } from 'astro:content'
import PostExtraMeta from '../meta/PostExtraMeta.astro'

export interface Props {
  class?: string
  entry: Post
  url: string
  style: string
}
const { class: className, entry, url, style } = Astro.props

const { title, image, description } = entry.data
const { remarkPluginFrontmatter } = await render(entry)

const coverWidth = image === undefined ? 'calc(var(--spacing) * 13)' : '28%'
---

<article class={className} {style}>
  <div class="info-wrapper">
    <h2>
      <a href={url}>
        {title}<Icon name="tabler:chevron-right" />
      </a>
    </h2>

    <PostMeta {entry} compactOnMobile class="meta-items" />

    <div class="description">
      {description}
    </div>

    <footer>
      <PostExtraMeta
        wordCount={remarkPluginFrontmatter.words}
        readingTime={remarkPluginFrontmatter.minutes}
      />
    </footer>
  </div>

  <PostLink {entry} {url} />
</article>

<style lang="scss" define:vars={{ 'cover-width': coverWidth }}>
  @use '$/styles/classes';
  @use '$/styles/theme' as *;

  article {
    @extend %card-base;

    display: block flex;
    position: relative;

    flex-direction: column;

    border-radius: var(--radius-xl2);

    inline-size: 100%;

    overflow: hidden;

    .info-wrapper {
      padding-block: spacing(5) spacing(6);
      padding-inline: spacing(6);

      h2 {
        position: relative;

        margin-block-end: spacing(3);

        a {
          display: block flow;

          transition-duration: var(--transition-duration);
          transition-property: var(--transition-properties);
          transition-timing-function: var(--transition-function);

          inline-size: 100%;

          color: var(--color-post-title);

          font-size: var(--text-xl3);
          font-weight: var(--fw-bold);

          &:hover {
            color: var(--color-primary);
          }

          &:active {
            color: var(--color-post-card-title-active);
          }

          [data-icon] {
            display: inline flow;
            position: relative;
            inset-block-start: spacing(-0.75);

            transition-duration: var(--transition-duration);
            transition-property: var(--transition-properties);
            transition-timing-function: var(--transition-function);

            block-size: spacing(8);
            inline-size: spacing(8);

            vertical-align: middle;

            color: var(--color-primary);

            @media (width >= $breakpoint-md) {
              translate: spacing(-1);

              opacity: 0%;
            }
          }

          @media (width >= $breakpoint-md) {
            &:hover [data-icon] {
              translate: 0;

              opacity: 100%;
            }
          }
        }

        @media (width >= $breakpoint-md) {
          &::before {
            position: absolute;
            inset-block-start: spacing(3.25);
            inset-inline-start: spacing(-4.5);

            border-radius: var(--radius-md);

            background-color: var(--color-primary);

            block-size: spacing(5);
            inline-size: spacing(1);

            content: '';
          }
        }
      }

      :global(.meta-items) {
        margin-block-end: spacing(4);
      }

      .description {
        margin-block: spacing(-1.5) spacing(3.5);

        padding-inline-end: spacing(4);

        color: var(--color-post-card-description);
      }

      @media (width >= $breakpoint-md) {
        // padding-block-start: spacing(7);
        padding-inline: spacing(9) spacing(2);

        inline-size: calc(100% - var(--cover-width) - 12px);
      }
    }

    @media (width < $breakpoint-md) {
      flex-direction: column-reverse;
    }

    // post separator
    @media (width < $breakpoint-md) {
      &:not(:first-child)::after {
        margin-inline: spacing(6);

        border-block-start: 1px dashed var(--color-post-card-separator);

        content: '';
      }
    }
  }
</style>

---
import type { Post } from '$/types/content'

import PostMeta from '$/components/post/meta/PostMeta.astro'
import PostLink from '$/components/post/card/PostLink.astro'
import { Icon } from 'astro-icon/components'
import { render } from 'astro:content'
import PostExtraMeta from '$/components/post/meta/PostExtraMeta.astro'

export interface Props {
  class?: string
  entry: Post
  url: string
  style: string
}
const { class: className, entry, url, style } = Astro.props

const { title, image, description } = entry.data
const { remarkPluginFrontmatter } = await render(entry)

const coverWidth = image === undefined ? '3.25rem' : '28%'
---

<article class={className} {style}>
  <div class='info-wrapper'>
    <h2>
      <a href={url}>
        {title}
        <Icon name='tabler:chevron-right' />
      </a>
    </h2>

    <PostMeta {entry} compactOnMobile={true} class='meta-items' />

    <div class='description'>
      {description}
    </div>

    <footer>
      <PostExtraMeta
        wordCount={remarkPluginFrontmatter.words}
        readingTime={remarkPluginFrontmatter.minutes}
      />
    </footer>
  </div>

  <PostLink {entry} {url} />
</article>

<style lang='scss' define:vars={{ 'cover-width': coverWidth }}>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  article {
    @extend %card-base;

    display: block flex;
    position: relative;

    flex-direction: column-reverse;

    border-radius: $radius-xl2;

    inline-size: 100%;

    overflow: hidden;

    // post separator
    &:not(:first-child)::after {
      margin-inline: spacing(6);

      border-block-start: 1px dashed var(--color-post-card-separator);

      content: '';

      @include md {
        display: none;
      }
    }

    .info-wrapper {
      padding-block: spacing(6);
      padding-inline: spacing(6);

      h2 a {
        @include transition;
        @include font-size($text-xl3);

        display: block flow;

        margin-block-end: spacing(3);

        inline-size: 100%;

        color: var(--color-post-title);

        font-weight: $font-weight-bold;

        &::before {
          display: none;
          position: absolute;
          inset-block-start: spacing(9);
          inset-inline-start: spacing(4.5);

          border-radius: $radius-md;

          background-color: var(--color-primary);

          block-size: spacing(5);
          inline-size: spacing(1);

          content: '';

          @include md {
            display: block flow;
          }
        }

        &:hover {
          color: var(--color-primary);
        }

        &:active {
          color: var(--color-title-active);
        }

        svg {
          @include transition;
          display: inline flow;
          position: absolute;

          translate: 0 spacing(0.5);

          block-size: spacing(8);
          inline-size: spacing(8);

          color: var(--color-primary);

          @include md {
            translate: spacing(-1);

            opacity: 0%;
          }
        }

        @include md {
          &:hover svg {
            translate: 0;

            opacity: 100%;
          }
        }
      }

      :global(.meta-items) {
        margin-block-end: spacing(4);
      }

      .description {
        margin-block: spacing(-1.5) spacing(3.5);

        padding-inline-end: spacing(4);

        color: bw(75%);
      }

      @include md {
        padding-block-start: spacing(7);
        padding-inline: spacing(9) spacing(2);

        inline-size: calc(100% - var(--cover-width) - 12px);
      }
    }

    @include md {
      flex-direction: column;
    }
  }
</style>

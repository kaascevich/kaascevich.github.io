---
import { formatDate } from "$/utils/dates"
import { Icon } from "astro-icon/components"
import strings from "$/config/strings"
import { url } from "$/utils/urls"

type Props = Readonly<{
  class: string
  published: Date
  updated?: Date | undefined
  tags: readonly string[]
  category: string
  compactOnMobile?: boolean | undefined
}>

const {
  class: className,
  published,
  updated,
  tags,
  category,
  compactOnMobile = false,
} = Astro.props
---

<div
  class:list={[
    "flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2",
    className,
  ]}
>
  <!-- publish date -->
  <time datetime={published.toISOString()} class="flex items-center">
    <div class="meta-icon">
      <Icon name="tabler:calendar-plus" size="1.25rem" />
    </div>
    <span class="text-50 text-sm font-medium">
      {formatDate(published)}
    </span>
  </time>

  <!-- update date -->
  {
    updated !== undefined && updated.getTime() !== published.getTime() && (
      <time
        datetime={updated.toISOString()}
        class:list={[
          "flex items-center",
          { "hidden md:flex": compactOnMobile },
        ]}
      >
        <div class="meta-icon">
          <Icon name="tabler:calendar-cog" size="1.25rem" />
        </div>
        <span class="text-50 text-sm font-medium">{formatDate(updated)}</span>
      </time>
    )
  }

  <!-- categories -->
  <div class="flex items-center">
    <div class="meta-icon">
      <Icon name="tabler:category" size="1.25rem" />
    </div>
    <div class="flex flex-row flex-nowrap items-center">
      <a
        href={url(`/archive/category/${category}/`)}
        aria-label={strings.alts.category(category)}
        class="link-lg transition text-50 text-sm font-medium hover:text-[--primary] dark:hover:text-[--primary] whitespace-nowrap"
      >
        {category}
      </a>
    </div>
  </div>

  <!-- tags -->
  <div
    class:list={["items-center flex", { "hidden md:flex": compactOnMobile }]}
  >
    <div class="meta-icon">
      <Icon name="tabler:hash" size="1.25rem" />
    </div>
    <ul class="flex flex-row flex-nowrap items-center">
      {
        tags.length > 0 ?
          tags.map((tag, i) => (
            <>
              <div
                class:list={[
                  { hidden: i === 0 },
                  "mx-1.5 text-[--meta-divider] text-sm",
                ]}
              >
                /
              </div>
              <a
                href={url(`/archive/tag/${tag}/`)}
                aria-label={strings.alts.tag(tag)}
                class="link-lg transition text-50 text-sm font-medium hover:text-[--primary] dark:hover:text-[--primary] whitespace-nowrap"
              >
                {tag}
              </a>
            </>
          ))
        : <div class="transition text-50 text-sm font-medium">
            {strings.tags.none}
          </div>
      }
    </ul>
  </div>
</div>

<style lang="scss">
  @use "$/styles/theme" as *;
  @use "$/styles/utils" as *;
  @use "$/styles/variants";

  .meta-icon {
    width: spacing(8);
    height: spacing(8);
    @include transition();
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: spacing(2);
    border-radius: $radius-md;
    background-color: var(--btn-regular-bg);
    color: var(--btn-content);
  }
</style>

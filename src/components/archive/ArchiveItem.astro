---
import { getPostUrlByID } from '$/utils/urls'
import type { CollectionEntry } from 'astro:content'

type Props = Readonly<{
  post: CollectionEntry<'posts'>
}>
const { post } = Astro.props

function formatDate(date: Date): string {
  const format = new Intl.DateTimeFormat('en-US', {
    month: 'numeric',
    day: '2-digit',
  })
  return format.format(date)
}

function formatTag(tag: readonly string[]): string {
  return tag.map((t) => `#${t}`).join(' ')
}
---

<a
  href={getPostUrlByID(post.id)}
  aria-label={post.data.title}
  class="group btn-plain !block h-10 w-full rounded-lg hover:text-[initial]"
>
  <div class="flex flex-row justify-start items-center h-full">
    <!-- date -->
    <time
      datetime={post.data.published.toISOString()}
      class="w-[15%] md:w-[10%] transition ext-sm text-right text-50"
    >
      {formatDate(post.data.published)}
    </time>

    <!-- dot and line -->
    <div class="w-[15%] md:w-[10%] relative dash-line h-full flex items-center">
      <div
        class="transition-all mx-auto w-1 h-1 rounded group-hover:h-5 bg-[oklch(0.5_0.05_var(--hue))] group-hover:bg-[--primary] outline outline-4 z-50 outline-[--card-bg] group-hover:outline-[--btn-plain-bg-hover] group-active:outline-[--btn-plain-bg-active]"
      >
      </div>
    </div>

    <!-- post title -->
    <div
      class="w-[70%] md:max-w-[65%] md:w-[65%] text-left font-bold group-hover:translate-x-1 transition-all group-hover:text-[--primary] text-75 pr-8 whitespace-nowrap overflow-ellipsis overflow-hidden"
    >
      {post.data.title}
    </div>

    <!-- tag list -->
    <div
      class="hidden md:block md:w-[15%] text-left text-sm transition whitespace-nowrap overflow-ellipsis overflow-hidden text-30"
    >
      {formatTag(post.data.tags)}
    </div>
  </div>
</a>

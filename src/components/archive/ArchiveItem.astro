---
import type { Post } from '$/types/content'

import * as R from 'remeda'
import { getPostUrlByID } from '$/utils/urls'

export interface Props {
  post: Post
}
const { post } = Astro.props

const formatDate = new Intl.DateTimeFormat('en-US', {
  month: 'numeric',
  day: '2-digit',
}).format

function formatTagList<T extends readonly string[]>(tags: T) {
  return R.pipe(
    tags,
    R.map((x) => `#${x}` as const),
    R.join(' '),
  )
}
---

<a href={getPostUrlByID(post.id)} aria-label={post.data.title}>
  <div class='item-wrapper'>
    <!-- date -->
    <time datetime={post.data.published.toISOString()}>
      {formatDate(post.data.published)}
    </time>

    <!-- dot and line -->
    <div class='separator'>
      <div></div>
    </div>

    <!-- post title -->
    <div class='title'>
      {post.data.title}
    </div>

    <!-- tag list -->
    <div class='tag-list'>
      {formatTagList(post.data.tags)}
    </div>
  </div>
</a>

<style lang='scss'>
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants' as *;

  %dash-line {
    position: relative;

    &::before {
      position: absolute;
      inset-inline-start: calc(50% - 1px);

      translate: 0 -50%;

      transition: all 300ms;

      border-inline-start: 2px dashed var(--line-color);

      block-size: 100%;
      inline-size: 10%;

      content: '';

      pointer-events: none;
    }
  }

  a {
    @extend %btn-plain;

    display: block flow !important;

    border-radius: $radius-lg;

    block-size: spacing(10);
    inline-size: 100%;

    &:hover {
      color: initial;

      .title {
        translate: spacing(1);

        color: var(--primary) !important;
      }

      .separator div {
        outline-color: var(--btn-plain-bg-hover);

        background-color: var(--primary);

        block-size: spacing(5);
      }
    }

    &:active .separator div {
      outline-color: var(--btn-plain-bg-active);
    }

    .item-wrapper {
      display: block flex;

      flex-direction: row;

      align-items: center;
      justify-content: flex-start;

      block-size: 100%;
    }

    time {
      inline-size: 15%;

      text-align: end;

      color: bw(50%);

      @include md {
        inline-size: 10%;
      }
    }

    .separator {
      @extend %dash-line;

      display: block flex;
      position: relative;

      align-items: center;

      block-size: 100%;
      inline-size: 15%;

      div {
        @include transition($properties: all);

        z-index: 50;

        margin-inline: auto;

        outline: 4px solid var(--card-bg);

        border-radius: $radius-sm;

        background-color: with-hue(50%, 12.5%);

        block-size: spacing(1);
        inline-size: spacing(1);
      }

      @include md {
        inline-size: 10%;
      }
    }

    .title {
      @include transition($properties: all);

      padding-inline-end: spacing(8);

      inline-size: 70%;

      overflow: hidden;

      text-align: start;
      text-overflow: ellipsis;

      white-space: nowrap;
      color: bw(75%);

      font-weight: $font-weight-bold;

      @include md {
        inline-size: 50%;
        max-inline-size: 50%;
      }
    }

    .tag-list {
      @include font-size($text-sm);

      display: none;

      margin-inline-end: spacing(3);

      overflow: hidden;

      text-align: end;
      text-overflow: ellipsis;

      white-space: nowrap;
      color: bw(30%);

      @include md {
        display: block flow;

        inline-size: 30%;
      }
    }
  }
</style>

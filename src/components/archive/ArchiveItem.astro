---
import type { Post } from '$/types/content'

import * as R from 'remeda'
import { getPostUrlByID } from '$/utils/urls'

interface Props {
  post: Post
}
const { post } = Astro.props

const formatDate = new Intl.DateTimeFormat('en-US', {
  month: 'numeric',
  day: '2-digit',
}).format

function formatTagList<T extends readonly string[]>(tags: T) {
  return R.pipe(
    tags,
    R.map((x) => `#${x}` as const),
    R.join(' '),
  )
}
---

<a href={getPostUrlByID(post.id)} aria-label={post.data.title}>
  <div class="item-wrapper">
    <!-- date -->
    <time datetime={post.data.published.toISOString()}>
      {formatDate(post.data.published)}
    </time>

    <!-- dot and line -->
    <div class="separator">
      <div></div>
    </div>

    <!-- post title -->
    <div class="title">
      {post.data.title}
    </div>

    <!-- tag list -->
    <div class="tag-list">
      {formatTagList(post.data.tags)}
    </div>
  </div>
</a>

<style lang="scss">
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  %dash-line {
    position: relative;

    &::before {
      content: '';

      position: absolute;
      left: calc(50% - 1px);

      width: 10%;
      height: 100%;

      transition: all 300ms;

      border-left-width: 2px;
      border-style: dashed;
      border-left-color: var(--line-color);

      pointer-events: none;
      translate: 0 -50%;
    }
  }

  a {
    @extend %btn-plain;

    display: block !important;
    width: 100%;
    height: spacing(10);

    border-radius: $radius-lg;

    .item-wrapper {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-start;
      height: 100%;
    }

    time {
      @include transition;
      @include text-plain(50%);

      width: 15%;

      text-align: right;

      @include variants.md {
        width: 10%;
      }
    }

    .separator {
      @extend %dash-line;

      display: flex;

      position: relative;
      align-items: center;
      width: 15%;
      height: 100%;

      @include variants.md {
        width: 10%;
      }

      div {
        @include transition($properties: all);

        z-index: 50;

        width: spacing(1);
        height: spacing(1);
        margin-right: auto;
        margin-left: auto;

        border-radius: $radius-sm;

        outline: 4px solid var(--card-bg);

        background-color: with-hue(50%, 0.05);
      }
    }

    .title {
      @include transition($properties: all);
      @include text-plain(75%);

      width: 70%;
      padding-right: spacing(8);
      overflow: hidden;

      font-weight: $font-weight-bold;
      text-align: left;
      text-overflow: ellipsis;
      white-space: nowrap;

      @include variants.md {
        width: 60%;
        max-width: 60%;
      }
    }

    .tag-list {
      @include transition;
      @include font-size($text-sm);
      @include text-plain(30%);

      display: none;
      overflow: hidden;

      text-align: left;
      text-overflow: ellipsis;

      white-space: nowrap;

      @include variants.md {
        display: block;
        width: 20%;
      }
    }

    &:hover {
      color: initial;

      .title {
        translate: spacing(1);

        color: var(--primary) !important;
      }

      .separator div {
        height: spacing(5);

        outline-color: var(--btn-plain-bg-hover);

        background-color: var(--primary);
      }
    }

    &:active .separator div {
      outline-color: var(--btn-plain-bg-active);
    }
  }
</style>

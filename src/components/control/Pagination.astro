---
import type { Page } from "astro"
import { Icon } from "astro-icon/components"
import { url } from "../../utils/url-utils"
type Props = {
  page: Page
  class?: string | undefined
  style?: string | undefined
}

const { page, class: className, style } = Astro.props

const HIDDEN = -1

const ADJ_DIST = 2
const VISIBLE = ADJ_DIST * 2 + 1

// for test
let count = 1
let leftmost = page.currentPage
let rightmost = page.currentPage
while (
  0 < leftmost - 1 &&
  rightmost + 1 <= page.lastPage &&
  count + 2 <= VISIBLE
) {
  count += 2
  leftmost -= 1
  rightmost += 1
}
while (0 < leftmost - 1 && count < VISIBLE) {
  count += 1
  leftmost -= 1
}
while (rightmost + 1 <= page.lastPage && count < VISIBLE) {
  count += 1
  rightmost += 1
}

const pages: number[] = []
if (leftmost > 1) {
  pages.push(1)
}
if (leftmost === 3) {
  pages.push(2)
} else if (leftmost > 3) {
  pages.push(HIDDEN)
}
for (let i = leftmost; i <= rightmost; i += 1) {
  pages.push(i)
}
if (rightmost < page.lastPage - 2) {
  pages.push(HIDDEN)
} else if (rightmost === page.lastPage - 2) {
  pages.push(page.lastPage - 1)
}
if (rightmost < page.lastPage) {
  pages.push(page.lastPage)
}

const getPageUrl = (p: number): string => (p === 1 ? "/" : `/${p}/`)
---

<div class:list={[className, "flex flex-row gap-3 justify-center"]} {style}>
  <a
    href={url(page.url.prev ?? "")}
    aria-label={page.url.prev === undefined ? null : "Previous Page"}
    class:list={[
      "btn-card overflow-hidden rounded-lg text-[var(--primary)] w-11 h-11",
      { disabled: page.url.prev === undefined },
    ]}
  >
    <Icon name="material-symbols:chevron-left-rounded" class="text-[1.75rem]" />
  </a>
  <div
    class="bg-[var(--card-bg)] flex flex-row rounded-lg items-center text-neutral-700 dark:text-neutral-300 font-bold"
  >
    {
      pages.map((p) => {
        if (p === HIDDEN)
          return <Icon name="material-symbols:more-horiz" class="mx-1" />
        if (p === page.currentPage)
          return (
            <div class="h-11 w-11 rounded-lg bg-[var(--primary)] flex items-center justify-center font-bold text-white dark:text-black/70">
              {p}
            </div>
          )
        return (
          <a
            href={url(getPageUrl(p))}
            aria-label={`Page ${p}`}
            class="btn-card w-11 h-11 rounded-lg overflow-hidden active:scale-[0.85]"
          >
            {p}
          </a>
        )
      })
    }
  </div>
  <a
    href={url(page.url.next ?? "")}
    aria-label={page.url.next ? "Next Page" : null}
    class:list={[
      "btn-card overflow-hidden rounded-lg text-[var(--primary)] w-11 h-11",
      { disabled: page.url.next === undefined },
    ]}
  >
    <Icon
      name="material-symbols:chevron-right-rounded"
      class="text-[1.75rem]"
    />
  </a>
</div>

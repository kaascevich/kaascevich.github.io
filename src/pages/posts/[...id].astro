---
import { render, type CollectionEntry } from "astro:content"
import License from "$/components/post/License.astro"
import Markdown from "$/components/post/Markdown.astro"
import PostHeader from "$/components/post/PostHeader.astro"
import PostPagination from "$/components/post/PostPagination.astro"
import MainGridLayout from "$/layouts/MainGridLayout.astro"
import siteConfig from "$/config/site"
import { formatDate } from "$/utils/dates"
import { getSortedPosts } from "$/utils/content"
import type { GetStaticPaths } from "astro"

export const getStaticPaths = (async () => {
  const blogEntries = await getSortedPosts()
  return blogEntries.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }))
}) satisfies GetStaticPaths

type Props = Readonly<{
  entry: CollectionEntry<"posts">
}>

const { entry }: Props = Astro.props
const { Content, headings, remarkPluginFrontmatter } = await render(entry)

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: entry.data.title,
  description: entry.data.description,
  keywords: entry.data.tags,
  author: {
    "@type": "Person",
    name: siteConfig.profile.name,
    url: Astro.site,
  },
  datePublished: formatDate(entry.data.published),
} as const
---

<MainGridLayout title={entry.data.title} description={entry.data.description} setOGTypeArticle={true} {headings}>
  <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)} />

  <div class="post-container-wrapper">
    <div id="post-container" data-pagefind-body>
      <PostHeader {entry} wordCount={remarkPluginFrontmatter.words} readingTime={remarkPluginFrontmatter.minutes} />

      <Markdown class="mb-6 markdown-content onload-animation">
        <Content />
      </Markdown>

      {
        siteConfig.license !== undefined && (
          <License
            config={siteConfig.license}
            title={entry.data.title}
            pubDate={entry.data.published}
            class="mb-6 rounded-xl license-container onload-animation"
          />
        )
      }
    </div>
  </div>

  <PostPagination {entry} />
</MainGridLayout>

<style lang="scss">
  @use "$/styles/main";
  @use "$/styles/theme" as *;
  @use "$/styles/utils" as *;
  @use "$/styles/variants";

  .post-container-wrapper {
    display: flex;
    position: relative;
    margin-bottom: spacing(4);
    border-radius: $radius-xl2;
    width: 100%;
    overflow: hidden;

    #post-container {
      @extend .card-base;
      position: relative;
      z-index: 10;
      padding: spacing(6) spacing(6) spacing(4);
      width: 100%;

      @include variants.md {
        @include padding-x(spacing(9));
      }
    }
  }
</style>

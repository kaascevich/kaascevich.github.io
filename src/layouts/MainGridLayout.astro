---
import Footer from '$/components/global/Footer.astro'
import Navbar from '$/components/global/nav/Navbar.astro'
import BackToTop from '$/components/widget/BackToTop.astro'
import Sidebar from '$/components/widget/sidebar/Sidebar.astro'
import Layout from '$/layouts/Layout.astro'
import siteConfig from '$/config/site'
import type { MarkdownHeading } from 'astro'
import TOCWrapper from '$/components/widget/toc/TOCWrapper.astro'
import {
  BANNER_HEIGHT,
  MAIN_PANEL_OVERLAPS_BANNER_HEIGHT,
} from '$/constants/constants'
import Banner from '$/components/global/Banner.astro'
import BannerCredit from '$/components/global/BannerCredit.astro'

interface Props {
  title?: string
  description?: string
  setOGTypeArticle?: boolean
  headings?: readonly MarkdownHeading[]
}

const { title, description, setOGTypeArticle, headings = [] } = Astro.props

const mainPanelTop =
  siteConfig.banner === undefined
    ? '5.5rem'
    : `calc(${BANNER_HEIGHT}vh - ${MAIN_PANEL_OVERLAPS_BANNER_HEIGHT}rem)`
---

<Layout {title} {description} {setOGTypeArticle}>
  <!-- navbar -->
  <slot slot="head" name="head" />
  <header id="top-row">
    <div id="navbar-wrapper">
      <Navbar />
    </div>
  </header>

  {siteConfig.banner !== undefined && <Banner config={siteConfig.banner} />}

  <!-- main content -->
  <!-- pointer-events-none prevents blocking TOC click events -->
  <div
    class="main-outer-wrapper"
    style={{ insetBlockStart: mainPanelTop }}
  >
    <div class="main-inner-wrapper">
      <div id="main-grid">
        {
          siteConfig.banner?.credit !== undefined && (
            <BannerCredit config={siteConfig.banner.credit} />
          )
        }

        <Sidebar />

        <main id="swup-container" class="transition-swup-fade">
          <div id="content-wrapper">
            <slot />
            <div class="footer-mobile">
              <Footer />
            </div>
          </div>
        </main>

        <div class="footer-desktop">
          <Footer />
        </div>
      </div>

      <BackToTop />
    </div>
  </div>

  <TOCWrapper {headings} />
</Layout>

<style lang="scss">
  @use '$/styles/main';
  @use '$/styles/theme' as *;
  @use '$/styles/transition';
  @use '$/styles/utils' as *;
  @use '$/styles/variants';

  #top-row {
    @include transition($duration: 700ms, $properties: all);
    position: relative;

    z-index: 50;

    margin-inline: auto;

    padding-inline: 0;

    max-inline-size: var(--page-width);

    pointer-events: none;

    #navbar-wrapper {
      @include transition($properties: all);
      position: sticky;
      inset-block-start: 0;

      pointer-events: auto;
    }

    @include variants.md {
      padding-inline: spacing(4);
    }
  }

  .main-outer-wrapper {
    position: absolute;

    z-index: 30;

    inline-size: 100%;

    pointer-events: none;

    .main-inner-wrapper {
      position: relative;

      margin-inline: auto;

      max-inline-size: var(--page-width);

      pointer-events: auto;

      #main-grid {
        @include transition($duration: 700ms);
        display: block grid;
        inset-inline: 0;

        grid-template-rows: auto 1fr auto;
        grid-template-columns: spacing(70) auto;

        gap: spacing(4);

        margin-inline: auto;

        padding-inline: 0;

        inline-size: 100%;

        :global(aside.sidebar) {
          @extend %onload-animation;
          grid-row: 2 / 3;
          grid-column: span 2 / span 2;

          margin-block-end: spacing(4);

          @include variants.lg {
            grid-row: 1 / 2;
            grid-column: span 1 / span 1;

            max-inline-size: spacing(70)l
          }
        }

        @include variants.md {
          padding-inline: spacing(4);
        }

        @include variants.lg {
          grid-template-rows: auto;
        }
      }
    }
  }

  main {
    grid-column: span 2 / span 2;

    outline: 2px solid transparent;
    outline-offset: 2px;

    overflow: hidden;

    #content-wrapper {
      @extend %onload-animation;

      animation-delay: var(--content-delay);
    }

    @include variants.lg {
      grid-column: span 1 / span 1;
    }
  }

  %footer {
    @extend %onload-animation;

    grid-column: span 2 / span 2;

    animation-delay: 250ms;
  }

  .footer-desktop {
    @extend %footer;

    display: block flow;

    @include variants.lg {
      display: none;
    }
  }

  .footer-mobile {
    @extend %footer;

    display: none;

    @include variants.lg {
      display: block flow;
    }
  }
</style>

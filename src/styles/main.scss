@use 'theme' as *;
@use 'utils' as *;
@use 'variants' as *;

* {
  box-sizing: border-box;
}

:root {
  color-scheme: light dark;

  @each $scheme in (light, dark) {
    &[data-color-scheme='#{$scheme}'] {
      color-scheme: $scheme;
    }
  }

  caret-color: var(--color-caret);
}

:root[data-color-scheme='dark'] {
  .astro-code,
  .astro-code span {
    color: var(--shiki-dark) !important;
  }
}

%card-base {
  @include transition;

  border-radius: var(--radius-xl2);

  background-color: var(--color-card-bg);

  overflow: hidden;
}

%expand-animation {
  position: relative;

  z-index: 0;

  &::before {
    @include transition($function: cubic-bezier(0, 0, 0.2, 1));

    position: absolute;
    inset: 0;

    scale: 85%;

    z-index: -10;

    border-radius: inherit;

    content: '';
  }

  &:hover::before {
    scale: 100%;

    background-color: var(--color-btn-plain-bg-hover);

    content: '';
  }

  &:active {
    background-image: none;

    &::before {
      background-color: var(--color-btn-plain-bg-active);

      content: '';
    }
  }
}

%link {
  @extend %expand-animation;
  @include transition;

  margin-block: spacing(-1);
  margin-inline: spacing(-1);

  border-radius: var(--radius-md);

  padding-block: spacing(1);
  padding-inline: spacing(1);
}

%float-panel {
  @include transition;

  inset-block-start: spacing(21);

  border-radius: var(--radius-xl2);

  box-shadow: var(--shadow-xl);

  background-color: var(--color-float-panel-bg);

  overflow: hidden;

  @include dark {
    box-shadow: var(--shadow-none);
  }
}

.float-panel-closed {
  translate: 0 spacing(-1);

  opacity: 0%;

  pointer-events: none;
}

%btn-card {
  @include transition;

  display: block flex;

  align-items: center;
  justify-content: center;

  background-color: var(--color-card-bg);

  &:hover {
    background-color: var(--color-btn-card-bg-hover);
  }

  &:active {
    background-color: var(--color-btn-card-bg-active);
  }

  &[aria-disabled='true'] {
    color: bw(10%);

    pointer-events: none;
  }
}

%btn-plain {
  @include transition;

  display: block flex;

  align-items: center;
  justify-content: center;

  background-image: none;

  color: bw(75%);

  &:hover {
    color: var(--color-primary);
  }

  &:not(%expand-animation) {
    &:hover {
      background-color: var(--color-btn-plain-bg-hover);
    }

    &:active {
      background-color: var(--color-btn-plain-bg-active);
    }
  }
}

%btn-regular {
  @include transition;

  display: block flex;

  align-items: center;
  justify-content: center;

  background-color: var(--color-btn-regular-bg);

  color: var(--color-btn-content);

  &:hover {
    background-color: var(--color-btn-regular-bg-hover);
  }

  &:active {
    background-color: var(--color-btn-regular-bg-active);
  }
}

.toc-hide,
.toc-not-ready {
  opacity: 0%;

  pointer-events: none;
}

.copy-btn-icon {
  @include transition;

  position: absolute;
  inset-block-start: 50%;
  inset-inline-start: 50%;

  translate: -50% -50%;
}

.copy-btn {
  display: block flex;

  align-items: center;
  justify-content: center;

  background-color: var(--color-copy-btn-bg);

  &:hover {
    background-color: var(--color-copy-btn-bg-hover);
  }

  &:active {
    background-color: var(--color-copy-btn-bg-active);
  }

  &.success {
    background-color: var(--color-copy-btn-bg-success);
  }

  .copy-icon {
    opacity: 100%;

    color: var(--color-copy-btn-icon);
  }

  &.copy-btn.success .copy-icon {
    opacity: 0%;

    color: var(--color-deep-text);
  }

  .success-icon {
    opacity: 0%;
  }

  &.success .success-icon {
    opacity: 100%;
  }
}

:is(article.markdown, #post-cover) img {
  cursor: zoom-in;
}

::selection {
  background-color: var(--color-selection-bg);
}

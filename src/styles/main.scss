@use 'theme' as *;
@use 'utils' as *;
@use 'variants';

:root[data-color-scheme='dark'] {
  .astro-code,
  .astro-code span {
    color: var(--shiki-dark) !important;
  }
}

%card-base {
  @include transition;

  overflow: hidden;

  border-radius: $radius-xl2;

  background-color: var(--card-bg);
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
a,
span,
li,
ul,
ol,
blockquote,
code,
pre,
table,
th,
td,
strong {
  @include transition;
}

%expand-animation {
  position: relative;
  z-index: 0;

  &::before {
    @include transition($function: $ease-out);

    content: '';

    position: absolute;
    scale: 85%;

    z-index: -10;
    inset: 0;

    border-radius: inherit;
  }

  &:hover::before {
    content: '';
    scale: 100%;

    background-color: var(--btn-plain-bg-hover);
  }

  &:active {
    background-image: none;

    &::before {
      content: '';

      background-color: var(--btn-plain-bg-active);
    }
  }
}

%link {
  @extend %expand-animation;
  @include transition;

  margin: spacing(-1);
  padding: spacing(1);

  border-radius: $radius-md;
}

%float-panel {
  @include transition;

  inset-block-start: spacing(21);

  overflow: hidden;

  border-radius: $radius-xl2;

  background-color: var(--float-panel-bg);
  box-shadow: $shadow-xl;

  @include variants.dark {
    box-shadow: $shadow-none;
  }
}

.float-panel-closed {
  translate: 0 spacing(-1);

  opacity: 0%;

  pointer-events: none;
}

%btn-card {
  @include transition;

  display: flex;
  align-items: center;
  justify-content: center;

  background-color: var(--card-bg);

  &:hover {
    background-color: var(--btn-card-bg-hover);
  }

  &:active {
    background-color: var(--btn-card-bg-active);
  }

  &[aria-disabled='true'] {
    @include text-plain(10%);

    pointer-events: none;
  }
}
%btn-plain {
  @include transition;

  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;

  background-image: none;

  color: black(75%);

  &:hover {
    color: var(--primary);
  }

  @include variants.dark {
    color: white(75%);

    &:hover {
      color: var(--primary);
    }
  }

  &:not(%expand-animation) {
    &:hover {
      background-color: var(--btn-plain-bg-hover);
    }

    &:active {
      background-color: var(--btn-plain-bg-active);
    }
  }
}

%btn-regular {
  @include transition;

  display: flex;
  align-items: center;
  justify-content: center;

  background-color: var(--btn-regular-bg);

  color: var(--btn-content);

  &:hover {
    background-color: var(--btn-regular-bg-hover);
  }

  &:active {
    background-color: var(--btn-regular-bg-active);
  }

  @include variants.dark {
    color: white(75%);
  }
}

.toc-hide,
.toc-not-ready {
  opacity: 0%;

  pointer-events: none;
}

.copy-btn-icon {
  @include transition;
}

.copy-btn {
  display: flex;
  align-items: center;
  justify-content: center;

  background-color: with-hue(45%, 0.01);

  &:hover {
    background-color: with-hue(50%, 0.01);
  }

  &:active {
    background-color: with-hue(55%, 0.01);
  }

  @include variants.dark {
    background-color: with-hue(30%, 0.02);

    &:hover {
      background-color: with-hue(35%, 0.03);
    }

    &:active {
      background-color: with-hue(40%, 0.03);
    }
  }

  &.success {
    background-color: with-hue(75%, 0.14);

    @include variants.dark {
      background-color: with-hue(75%, 0.14);
    }
  }

  .copy-icon {
    opacity: 100%;
    fill: white;

    @include variants.dark {
      fill: white(75%);
    }
  }

  &.copy-btn.success .copy-icon {
    opacity: 0%;
    fill: var(--deep-text);
  }

  .success-icon {
    opacity: 0%;
  }

  &.success .success-icon {
    opacity: 100%;
  }
}

:is(article.markdown, #post-cover) img {
  cursor: zoom-in;
}

::selection {
  background-color: var(--selection-bg);
}

:root {
  caret-color: var(--caret-color);
}
